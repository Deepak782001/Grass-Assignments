NPM:

NPM (Node Package Manager) is a free dependency manager for JavaScript projects. Initially, it was built for NodeJS, 
but it’s becoming a tool that people use to put JavaScript together on the frontend. It has a giant repository with 
hundreds of thousands of packages and modules.

With NPM you can specify all of your project’s necessary components in a package.json file. It’s also possible to define 
what versions your project depends upon to prevent updates from breaking your project. This way, when you or a developer 
needs to get started with your project they can just run npm install and immediately have all of the dependencies installed.



Promises: 

A Node.js Promise is a placeholder for a value that will be available in the future, allowing us to handle the result 
of an asynchronous task once it has completed or encountered an error. Promises make writing asynchronous code easier. 
They’re an improvement on the callback pattern and very popular in Node.js. Introduced as a standard part of JavaScript 
with ES6, Promises are used in ES8 async functions as building blocks.

Promises are used for control flow, and to handle errors when executing asynchronous code. Knowing how to work with 
Promises is an important part of modern JavaScript.